---
layout: blog
istop: false
title: "liunx下的C语言学习操作"
background-image: "/style/image/background.jpeg"
date: 2019-07-19
category: 笔记
tags: liunx C
---

## liunx 下的 c 语言学习操作

### C 语言定义：

​ 是一门面向过程、抽象化的通用程序设计语言，广泛应用于底层开发。C 语言能以简易的方式编译、处理低级存储器。

### ANSIC：

​ 是由美国国家标准协会（ANSI）及国际标准化组织（ISO）推出的关于 C 语言的标准 c 语言的标准

### 特点：

​ 小巧灵活 ，简单快速，代码简洁紧凑

### 适用范围 ：

​ liunx 嵌入式 小工具 操作系统 较高性能要求的应用程序

### 堆和栈的区别与含义：

​ 栈：内存中一块区域，主要存储一些函数中的局部变量，实时更新较快，每次程序结束就会释放。栈内的数据存放是先存入的在底部，后存入的在上面，取值时先取后存的。

​ 堆：内存中的一块区域，只要存储一些数组对象的实体，一般不会进行释放。

### 常用 liunx 系统 ：

​ ubuntu centOS

### linux 编辑器：

​ vim

### liunx 的文件类型：

​ d 开头的是一个文件夹

​ -开头的是普通文件

---

c 语言的一般编辑规范 ：函数的括号在同一列，其中的判断之类的大括号用驼峰型

#include <stdio.h> ：源代码]中如用到标准输入输出函数时，就要包含这个头文件)！

main 函数是 c 语言的入口函数：

```
int main()
{
​	printf(“hello word”)//输出函数
​	return 0;
}
```

通过 cc 编译器执行 a.c 这个 c 语言代码文件 将会输出建立一个文件 a.out 的可执行文件

​ ％d 整型输出，％ld 长整型输出

​ %o 以八进制数形式输出整数，

​ %x 以十六进制形式输出整数，或输出字符串的地址。

​ %u 以十进制输出 unsigned 型数据（无符号）。注意：%d 与%u 有无符号的数值范围，也就是极限的址，不然数值打印出来会有误。

​ %c 用来输出一个字符，

​ %s 用来输出一个字符串，

​ %f 用来输出实数，以小数形式输出，默认情况下保留小数点 6 位。

​ %.100f 用来输出实数，保留小数点 100 位。

​ %e 以指数形式输出实数，

​ %g 根据大小自动选 f 格式或 e 格式，且不输出无意义的零。

**注意**：在编写 c 语言代码时 由于函数名和变量名都是一个标识，所以不能起相同的名字，否则会引起一个错误

​ vim 可以同时打开多个文件，在命令模式下

​ :sp 文件名 ： 可以同时打开一个新文件

​ ![](/style/images/2019-07-19 21-11-56-vim 多开文件.png)

​ ![](/style/images/2019-07-19 21-09-31-vim 打开多个文件.png)

​ ctrl +w +方向键 ：可以切换文件

​ :set nu ：打开行号

​ num + d + d ：可以将从光标处开始 num 行代码剪切到剪贴板

​ p ： 可以将剪贴板中的内容 粘贴到光标处

​ ![](/style/images/2019-07-19 21-44-51 将内容剪贴到光标处.png)

**注意**：在 max 函数被剪贴到另一个文件夹，所以在执行 main 函数时会报找不到 max 函数的错，可以将 max 文件通过#inclued 导入进来

​ ![](/style/images/2019-07-19 21-45-54 导入 max 文件.png)

gcc 编译：

​ gcc -c max.c -o max.o : 生成 max.o 的二进制编译文件

​ gcc max.o min.o hello.c ：gcc 编译执行文件

报错问题：

​ alias gcc="gcc -w" ：关闭 警告级报错

​ alias gcc="gcc -Wall" ：打开 警告级报错

make : 可以用它来管理多模块程序的编译和链接，直至生成可执行文件

​ **make 使用程序读取一个说明文件，称为 Makefile**，Makefile 文件中描述了整个软件工程的 编译规则和各个文件之间的依赖关系；

​
